image: $CONTAINER_RELEASE_IMAGE

stages:
  - build
  - lint
  - test
  - deploy
  - tag_latest

variables:
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  POSTGRES_PASSWORD: password
  POSTGRES_DB: root
  POSTGRES_USER: root
  DATABASE_URL: postgres://root:password@postgres/root

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE

helm_lint:
  stage: lint
  image: dtzar/helm-kubectl
  only:
    - master
  script:
    - helm lint -f values.yaml cmc/

eslint:
  stage: lint
  script:
    - yarn eslint

rubocop:
  stage: lint
  script:
    - rubocop

detect_code_problems:
  stage: lint
  image: registry.gitlab.com/cmc_system/cmc/cmc:test
  services:
    - postgres:latest
  artifacts:
    paths:
      - tmp/rubycritic
    expire_in: 30 days
  script:
    - rubycritic app/ lib/ -s 97.00
    - rails_best_practices -e "db/migrate"
    - FAIL_ON_ERROR=1 DATABASE_URL=postgres://root:password@postgres/root rake traceroute

rspec:
  stage: test
  services:
    - postgres:latest
  variables:
    COVERAGE: "true"
  artifacts:
    paths:
      - coverage/
    expire_in: 30 days
  script:
    - rspec

mocha:
  stage: test
  script:
    - yarn test

cucumber:
  stage: test
  tags:
    - selenium
  services:
    - postgres:latest
    - selenium/standalone-chrome-debug:latest
  variables:
    POSTGRES_PASSWORD: password
    POSTGRES_DB: root
    POSTGRES_USER: root
    DATABASE_URL: postgres://root:password@localhost/root
    SELENIUM_HOST: localhost
    SELENIUM_PORT: 4444
    TEST_PORT: 3001
    RAILS_ENV: test
    TEST_HOST: lvh.me
    DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
  script:
    - cucumber

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  environment:
    name: production
    url: http://cost-manager.com
  script:
    - mkdir ~/.kube
    - echo $KUBE_CONFIG | base64 -d > ~/.kube/config
    - helm init --upgrade
    - export LOGS_COMAND="\$(kubectl get pods -l name=cmc-migrate-task | sed -n 2p | awk '{print \$1}')"
    - sleep 2 &&
      until kubectl logs $(eval echo $LOGS_COMAND) && kubectl logs -f $(eval echo $LOGS_COMAND); do
        sleep 0.2;
      done &
    - helm upgrade cmc-production cmc --install --wait
        -f values.yaml
        --set image.tag=$CI_COMMIT_SHA
        --set postgresql.postgresqlPassword=$DB_PASSWORD
        --set admin_password=$ADMIN_PASSWORD
  only:
    - master

tag_latest:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker tag $CI_REGISTRY_IMAGE:latest $CONTAINER_RELEASE_IMAGE
    - docker push $CI_REGISTRY_IMAGE:latest

pages:
  stage: deploy
  image: alpine:latest
  dependencies:
    - rspec
    - detect_code_problems
  script:
    - mv coverage/ public/
    - mv tmp/rubycritic public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
  except:
    - schedules
  except:
    - schedules
