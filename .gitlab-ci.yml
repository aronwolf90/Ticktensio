stages:
  - lint
  - test
  - build
  - deploy

variables:
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE_LATEST: $CI_REGISTRY_IMAGE:latest
  POSTGRES_PASSWORD: password
  POSTGRES_DB: root
  POSTGRES_USER: root
  DATABASE_URL: postgres://root:password@postgres/root

services:
  - postgres:latest

gitlint:
  stage: lint
  image: python:3.7.0a4-alpine3.7
  script:
    - apk update
    - apk add git
    - pip install gitlint
    - git log -1 --pretty=%B | gitlint

eslint:
  stage: lint
  image: node:9.9.0-alpine
  script:
    - npm install -g
      eslint eslint-config-standard
      eslint-plugin-import
      eslint-plugin-node
      eslint-plugin-standard
      eslint-config-standart
      eslint-plugin-promise
      eslint-plugin-vue
    - eslint app/javascript
    - eslint spec/javascript

rubocop:
  stage: lint
  image: registry.gitlab.com/cmc_system/cmc/cmc:test
  script:
    - apk update
    - ln -s /root/node_modules node_modules
    - bundle install
    - rubocop

detect_code_problems:
  stage: lint
  image: registry.gitlab.com/cmc_system/cmc/cmc:test
  artifacts:
    paths:
      - tmp/rubycritic
    expire_in: 30 days
  script:
    - bundle install
    - rubycritic app/ lib/ -s 98.00
    - rails_best_practices -e "db/migrate"
    - FAIL_ON_ERROR=1 DATABASE_URL=postgres://root:password@postgres/root rake traceroute

rspec:
  stage: test
  image: registry.gitlab.com/cmc_system/cmc/cmc:test
  variables:
    COVERAGE: "true"
  artifacts:
    paths:
      - coverage/
    expire_in: 30 days
  script:
    - bundle install
    - ln -s /root/node_modules node_modules
    - rspec

mocha:
  stage: test
  image: registry.gitlab.com/cmc_system/cmc/cmc:test
  script:
    - ln -s /root/node_modules node_modules
    - yarn install
    - yarn test

cucumber:
  stage: test
  image: registry.gitlab.com/cmc_system/cmc/cmc:test
  tags:
    - selenium
  services:
    - postgres:latest
    - name: selenium/standalone-chrome-debug:latest
      alias: selenium
  variables:
    POSTGRES_PASSWORD: password
    POSTGRES_DB: root
    POSTGRES_USER: root
    DATABASE_URL: postgres://root:password@postgres/root
    SELENIUM_HOST: selenium
    SELENIUM_PORT: 4444
    TEST_PORT: 3001
    RAILS_ENV: test
    DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
  script:
    - bundle install
    - ln -s /root/node_modules node_modules
    - yarn install
    - cucumber

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE .
    - docker tag $CONTAINER_RELEASE_IMAGE $CONTAINER_RELEASE_IMAGE_LATEST
    - docker push $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE_LATEST
  only:
    - master
  except:
    - schedules

build_test:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - apk update
    - apk add make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - make build_and_push_test_image
  only:
    - master
    - schedules

deploy:
  stage: deploy
  image: lwolf/helm-kubectl-docker:latest
  environment:
    name: production
    url: http://159.65.252.140:30928
  script:
    - 'which ssh-agent || ( apk update  && apk add openssh-client  )'
    - eval $(ssh-agent -s)
    - apk add bash
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - mkdir ~/.kube
    - echo $KUBE_CONFIG | base64 -d > ~/.kube/config
    - kubectl config use-context kubernetes-admin@kubernetes
    - helm init --upgrade
    - export DEPLOYS=$(helm ls | grep cmc-production | wc -l)
    - export LOGS_COMAND="\$(kubectl get pods -l name=cmc-migrate-task | sed -n 2p | awk '{print \$1}')"
    - sleep 2 &&
      until kubectl logs $(eval echo $LOGS_COMAND) && kubectl logs -f $(eval echo $LOGS_COMAND); do
        sleep 0.2;
      done &
    - if [ ${DEPLOYS}  -eq 0 ]; then
        helm install chart --name cmc-production
          --set image.tag=$CI_COMMIT_SHA
          --set remote=true
          --set url=cost-manager.tk;
      else
        helm upgrade cmc-production chart
          --set image.tag=$CI_COMMIT_SHA
          --set remote=true
          --set url=cost-manager.tk
          --force;
      fi
  only:
    - master
  except:
    - schedules

pages:
  stage: deploy
  image: alpine:latest
  dependencies:
    - rspec
    - detect_code_problems
  script:
    - mv coverage/ public/
    - mv tmp/rubycritic public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
  except:
    - schedules
  except:
    - schedules
