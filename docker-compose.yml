version: '3.4'
services:
  nginx:
    image: nginx
    networks:
      default:
        aliases:
          - test-organization.lvh.me
          - lvh.me
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
      - .:/usr/share/nginx/html/
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:11
    volumes:
      - db_volume:/var/lib/postgresql/data
    ports: 
      - 6432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 30

  mail_hog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"

  stripe_mock:
    image: registry.gitlab.com/web_utils/mockserver-docker:latest
    volumes:
      - ./stripe_mocks:/mocks
    ports:
      - "8080:8080"

  payment:
    image: registry.gitlab.com/cmc_system/cmc_payment
    ports:
      - "5000:4000"
    depends_on:
      - db
      - stripe_mock

  storage:
    image: minio/minio
    entrypoint: sh
    command: -c 'mkdir -p /data/cmc; /usr/bin/minio server /data'
    networks:
      default:
        aliases:
          - storage.lvh.me
    environment:
      - MINIO_ACCESS_KEY=access_key
      - MINIO_SECRET_KEY=secret_key
    ports:
      - "9000:9000"
    volumes:
      - storage_volume:/data

  redis:
    image: redis

  frontend:
    image: registry.gitlab.com/cmc_system/cmc-frontend
    build:
      context: .
      target: builder
    command: yarn dev
    ports:
      - "9001:9001"
    environment:
      - STRIPE_PUBLIC_KEY=pk_test_jnjnLmEpUo9tbTIEjKKGPr62007x2iQKkM
    volumes:
      - ./frontend:/app:cached

  worker:
    image: registry.gitlab.com/cmc_system/cmc:$TAG
    build:
      context: .
      target: builder
    stdin_open: true
    tty: true
    environment:
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - BUNDLE_BIN=false
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
      - AWS_KEY=access_key
      - AWS_SECRET=secret_key
      - AWS_ENDPOINT=http://storage.lvh.me:9000
      - REDIS_URL=redis://redis
      - MAILER_SMTP_DOMAIN=mail_hog
      - MAILER_PORT=1025 
    command:  /bin/sh -c "bundle exec sidekiq -C config/sidekiq.yml"
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle:cached
    depends_on:
      - db
      - selenium
      - storage
      - payment
      - redis

  backend:
    image: registry.gitlab.com/cmc_system/cmc:$TAG
    build:
      context: .
      target: builder
    stdin_open: true
    tty: true
    environment:
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - BUNDLE_BIN=false
      - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true
      - TEST_PORT=3000
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - AWS_KEY=access_key
      - AWS_SECRET=secret_key
      - AWS_ENDPOINT=http://storage.lvh.me:9000
      - CAPYBARA_RUN_SERVER=false
      - TEST_HOST=lvh.me
      - REDIS_URL=redis://redis
      - MAILER_SMTP_DOMAIN=mail_hog
      - MAILER_PORT=1025 
      - DISABLE_BOOTSNAP=false
    command:  /bin/sh -c "bin/install.sh; rm -r tmp/pids; bin/rails s -b '0.0.0.0' -p 3001"
    ports:
      - "3001:3001"
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle:cached
    depends_on:
      - db
      - selenium
      - storage
      - payment
      - redis
      - worker
      - mail_hog

  selenium:
    image: selenium/standalone-chrome-debug:3.141.59-20210422
    ports:
      - "4444:4444"
      - "5901:5900"
    shm_size: 2g

volumes:
  bundle:
  db_volume:
  storage_volume:
