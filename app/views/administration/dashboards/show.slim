.row
  .col-lg-6
    .card
      .card-header Projects
      .card-body
        .table-responsive
          table.table
            thead
              th Project
              th Total time
              th This month time
              th Last month time
            tbody
              - @model[:projects].each do |project, total_spent_time,  month_spent_time, last_month_spent_time|
                tr
                  td = link_to project, administration_project_path(project), class: "text-dark"
                  td = seconds_to_time(total_spent_time)
                  td = seconds_to_time(month_spent_time)
                  td = seconds_to_time(last_month_spent_time)

  .col-lg-6
    br.d-lg-none
    .card
      .card-header Last worked Issues
      .card-body
        .table-responsive
          table.table
            thead
              th Issue
              th Project
              th Time
            tbody
              - @model[:worked_issues].each do |issue|
                tr
                  td = link_to issue, "/administration/issues/#{issue.id}", class: "text-dark"
                  td = issue.project
                  td = SpendedTimeIssueUserCalculator.(issue, current_user)
      .card-footer
        .pull-right
          = paginate(@model[:worked_issues],
            param_name: :worked_issue_page)
br
.row
  .col-lg-6
    .card
      .card-header Assigned issues
      .card-body
        .table-responsive
          table.table
            thead
              th Issue
              th Project
              th Time
            tbody
              - @model[:assigned_issues].each do |issue|
                tr
                  td = link_to issue, "/administration/issues/#{issue.id}", class: "text-dark"
                  td = issue.project
                  td = SpendedTimeIssueUserCalculator.(issue, current_user)
      .card-footer
        .pull-right
          = paginate(@model[:assigned_issues],
            param_name: :assigned_issue_page)

  .col-lg-6
    br.d-lg-none
    .card
      .card-header Calender events
      .card-body
        .table-responsive
          table.table
            thead
              th Event
              th Day
              th start
              th end
            tbody
              - @model[:events].each do |event|
                tr
                  td = event
                  td = event.start_time.to_date
                  td = event.start_time unless event.all_day
                  td = event.end_time unless event.all_day
      .card-footer
        .pull-right = paginate @model[:events], param_name: :event_page
