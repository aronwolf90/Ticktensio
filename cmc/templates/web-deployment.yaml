apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web
  labels:
    name: {{ .Release.Name }}-web
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-web
    spec:
      containers:
        - name: web
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: "Always"
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              value: 'postgres://{{ .Values.postgresql.postgresqlUser }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Release.Name }}-postgresql/{{ .Values.postgresql.postgresqlDatabase }}'
            - name: SECRET_KEY_BASE
              value: '{{ .Values.webDeployment.secretKeyBase }}'
            - name: RAILS_ENV
              value: '{{ .Values.webDeployment.enviroment }}'
            - name: MULTI_TENANT
              value: '{{ .Values.multiTenant }}'
            - name: SENTRY_DSN
              value: '{{ .Values.webDeployment.sentryDsn }}'
            - name: ADMIN_PASSWORD
              value: '{{ .Values.admin_password }}'
          volumeMounts:
            {{- if .Values.webPersistence.enabled }}
            - name: files
              mountPath: /app/uploads
            {{- end }}
            - mountPath: /assets
              name: assets
          lifecycle:
            postStart:
              exec:
                command: 
                  - sh 
                  - -c 
                  - "cp -r /app/public/* /assets"

        - image: nginx:1.14-alpine
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /assets
              name: assets
              readOnly: true
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
              readOnly: true

      volumes:
        {{- if .Values.webPersistence.enabled }}
        - name: files
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-web-pvc
        {{- end }}
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: assets
          emptyDir: {}
