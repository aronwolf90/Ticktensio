apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cmc-web
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: cmc-web
    spec:
      containers:
        - name: cmc-web
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: "Always"
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              value: 'postgres://root:{{ .Values.db_password }}@cmc-database/database'
            - name: SECRET_KEY_BASE
              value: {{ .Values.secret_key_base }}
            - name: RAILS_ENV
              value: {{ .Values.enviroment }}
            - name: RAILS_SERVE_STATIC_FILES
              value: "true"
            - name: SENTRY_DSN
              value: https://2c9ff5941e854f7d86b5b485068054a5:b2ef518f3a9b4a6ab4c8d5d6fc893357@sentry.io/289461
          volumeMounts:
            - name: cmc-files-volume
              mountPath: /app/uploads
            - mountPath: /assets
              name: assets
          lifecycle:
            postStart:
              exec:
                command: 
                  - sh 
                  - -c 
                  - "cp -r /app/public/* /assets"


        - image: nginx:1.14-alpine
          name: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /assets
              name: assets
              readOnly: true
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
              readOnly: true


      volumes:
        - name: cmc-files-volume
          persistentVolumeClaim:
            claimName: cmc-web-pvc
        - name: nginx-conf
          configMap:
            name: cmc-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: assets
          emptyDir: {}

